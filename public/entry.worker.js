var h=(e,t={})=>{let s=typeof t=="number"?{status:t}:t,a=new Headers(s.headers);return a.has("Content-Type")||a.set("Content-Type","application/json; charset=utf-8"),new Response(JSON.stringify(e),{...s,headers:a})};var C=["/build/","/icons/","/"],f="asset-cache",m="data-cache",p="document-cache";function r(...e){}async function b(e){r("Service worker installed")}async function R(e){r("Service worker activated")}async function E(e){let t=new Map;if(e.data.type==="REMIX_NAVIGATION"){let{isMount:s,location:a,matches:o,manifest:g}=e.data,n=a.pathname+a.search+a.hash,[w,y,S]=await Promise.all([caches.open(m),caches.open(p),caches.match(n)]);if((!S||!s)&&(r("Caching document for",n),t.set(n,y.add(n).catch(i=>{r(`Failed to cache document for ${n}:`,i)}))),s){for(let i of o)if(g.routes[i.id].hasLoader){let l=new URLSearchParams(a.search);l.set("_data",i.id);let d=l.toString();d=d?`?${d}`:"";let c=a.pathname+d+a.hash;t.has(c)||(r("Caching data for",c),t.set(c,w.add(c).catch(x=>{r(`Failed to cache data for ${c}:`,x)})))}}}await Promise.all(t.values())}async function k(e){let t=new URL(e.request.url);if(A(e.request)){let s=await caches.match(e.request,{cacheName:f,ignoreVary:!0,ignoreSearch:!0});if(s)return r("Serving asset from cache",t.pathname),s;r("Serving asset from network",t.pathname);let a=await fetch(e.request);return a.status===200&&await(await caches.open(f)).put(e.request,a.clone()),a}if(U(e.request))try{r("Serving data from network",t.pathname+t.search);let s=await fetch(e.request.clone());return await(await caches.open(m)).put(e.request,s.clone()),s}catch{r("Serving data from network failed, falling back to cache",t.pathname+t.search);let a=await caches.match(e.request);return a?(a.headers.set("X-Remix-Worker","yes"),a):h({message:"Network Error"},{status:500,headers:{"X-Remix-Catch":"yes","X-Remix-Worker":"yes"}})}if(L(e.request))try{r("Serving document from network",t.pathname);let s=await fetch(e.request);return await(await caches.open(p)).put(e.request,s.clone()),s}catch(s){r("Serving document from network failed, falling back to cache",t.pathname);let a=await caches.match(e.request);if(a)return a;throw s}return fetch(e.request.clone())}var q=e=>{var o;let t=JSON.parse((o=e==null?void 0:e.data)==null?void 0:o.text()),s=t.title?t.title:"Remix PWA",a={body:t.body?t.body:"Notification Body Text",icon:t.icon?t.icon:"/icons/android-icon-192x192.png",badge:t.badge?t.badge:"/icons/android-icon-48x48.png",dir:t.dir?t.dir:"auto",image:t.image?t.image:void 0,silent:t.silent?t.silent:!1};self.registration.showNotification(s,{...a})};function u(e,t){return t.includes(e.method.toLowerCase())}function A(e){return u(e,["get"])&&C.some(t=>e.url.startsWith(t))}function U(e){let t=new URL(e.url);return u(e,["get"])&&t.searchParams.get("_data")}function L(e){return u(e,["get"])&&e.mode==="navigate"}self.addEventListener("install",e=>{e.waitUntil(b(e).then(()=>self.skipWaiting()))});self.addEventListener("activate",e=>{e.waitUntil(R(e).then(()=>self.clients.claim()))});self.addEventListener("message",e=>{e.waitUntil(E(e))});self.addEventListener("push",e=>{self.clients.matchAll().then(function(t){t.length===0&&e.waitUntil(q(e))})});self.addEventListener("fetch",e=>{e.respondWith((async()=>{let t={};try{t.response=await k(e)}catch(s){t.error=s}return M(e,t)})())});async function M(e,{error:t,response:s}){return s}
/**
 * @remix-run/server-runtime v1.7.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
